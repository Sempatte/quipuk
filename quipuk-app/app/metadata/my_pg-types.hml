---
kind: ScalarType
version: v1
definition:
  name: Int4
  graphql:
    typeName: Int4

---
kind: BooleanExpressionType
version: v1
definition:
  name: Int4BoolExp
  operand:
    scalar:
      type: Int4
      comparisonOperators:
        - name: _eq
          argumentType: Int4!
        - name: _gt
          argumentType: Int4!
        - name: _gte
          argumentType: Int4!
        - name: _in
          argumentType: "[Int4!]!"
        - name: _lt
          argumentType: Int4!
        - name: _lte
          argumentType: Int4!
        - name: _neq
          argumentType: Int4!
      dataConnectorOperatorMapping:
        - dataConnectorName: my_pg
          dataConnectorScalarType: int4
          operatorMapping: {}
  logicalOperators:
    enable: true
  isNull:
    enable: true
  graphql:
    typeName: Int4BoolExp

---
kind: DataConnectorScalarRepresentation
version: v1
definition:
  dataConnectorName: my_pg
  dataConnectorScalarType: int4
  representation: Int4
  graphql:
    comparisonExpressionTypeName: Int4ComparisonExp

---
kind: ScalarType
version: v1
definition:
  name: Varchar
  graphql:
    typeName: Varchar

---
kind: BooleanExpressionType
version: v1
definition:
  name: VarcharBoolExp
  operand:
    scalar:
      type: Varchar
      comparisonOperators:
        - name: _eq
          argumentType: Varchar!
        - name: _gt
          argumentType: Varchar!
        - name: _gte
          argumentType: Varchar!
        - name: _ilike
          argumentType: Varchar!
        - name: _in
          argumentType: "[Varchar!]!"
        - name: _iregex
          argumentType: Varchar!
        - name: _like
          argumentType: Varchar!
        - name: _lt
          argumentType: Varchar!
        - name: _lte
          argumentType: Varchar!
        - name: _neq
          argumentType: Varchar!
        - name: _nilike
          argumentType: Varchar!
        - name: _niregex
          argumentType: Varchar!
        - name: _nlike
          argumentType: Varchar!
        - name: _nregex
          argumentType: Varchar!
        - name: _regex
          argumentType: Varchar!
        - name: starts_with
          argumentType: Varchar!
        - name: ts_match_tt
          argumentType: Varchar!
      dataConnectorOperatorMapping:
        - dataConnectorName: my_pg
          dataConnectorScalarType: varchar
          operatorMapping: {}
  logicalOperators:
    enable: true
  isNull:
    enable: true
  graphql:
    typeName: VarcharBoolExp

---
kind: DataConnectorScalarRepresentation
version: v1
definition:
  dataConnectorName: my_pg
  dataConnectorScalarType: varchar
  representation: Varchar
  graphql:
    comparisonExpressionTypeName: VarcharComparisonExp

---
kind: ScalarType
version: v1
definition:
  name: Text
  graphql:
    typeName: Text

---
kind: BooleanExpressionType
version: v1
definition:
  name: TextBoolExp
  operand:
    scalar:
      type: Text
      comparisonOperators:
        - name: _eq
          argumentType: Text!
        - name: _gt
          argumentType: Text!
        - name: _gte
          argumentType: Text!
        - name: _ilike
          argumentType: Text!
        - name: _in
          argumentType: "[Text!]!"
        - name: _iregex
          argumentType: Text!
        - name: _like
          argumentType: Text!
        - name: _lt
          argumentType: Text!
        - name: _lte
          argumentType: Text!
        - name: _neq
          argumentType: Text!
        - name: _nilike
          argumentType: Text!
        - name: _niregex
          argumentType: Text!
        - name: _nlike
          argumentType: Text!
        - name: _nregex
          argumentType: Text!
        - name: _regex
          argumentType: Text!
        - name: starts_with
          argumentType: Text!
        - name: ts_match_tt
          argumentType: Text!
      dataConnectorOperatorMapping:
        - dataConnectorName: my_pg
          dataConnectorScalarType: text
          operatorMapping: {}
  logicalOperators:
    enable: true
  isNull:
    enable: true
  graphql:
    typeName: TextBoolExp

---
kind: DataConnectorScalarRepresentation
version: v1
definition:
  dataConnectorName: my_pg
  dataConnectorScalarType: text
  representation: Text
  graphql:
    comparisonExpressionTypeName: TextComparisonExp

---
kind: ScalarType
version: v1
definition:
  name: Timestamp
  graphql:
    typeName: Timestamp

---
kind: BooleanExpressionType
version: v1
definition:
  name: TimestampBoolExp
  operand:
    scalar:
      type: Timestamp
      comparisonOperators:
        - name: _eq
          argumentType: Timestamp!
        - name: _gt
          argumentType: Timestamp!
        - name: _gte
          argumentType: Timestamp!
        - name: _in
          argumentType: "[Timestamp!]!"
        - name: _lt
          argumentType: Timestamp!
        - name: _lte
          argumentType: Timestamp!
        - name: _neq
          argumentType: Timestamp!
      dataConnectorOperatorMapping:
        - dataConnectorName: my_pg
          dataConnectorScalarType: timestamp
          operatorMapping: {}
  logicalOperators:
    enable: true
  isNull:
    enable: true
  graphql:
    typeName: TimestampBoolExp

---
kind: DataConnectorScalarRepresentation
version: v1
definition:
  dataConnectorName: my_pg
  dataConnectorScalarType: timestamp
  representation: Timestamp
  graphql:
    comparisonExpressionTypeName: TimestampComparisonExp

---
kind: ScalarType
version: v1
definition:
  name: Numeric
  graphql:
    typeName: Numeric

---
kind: BooleanExpressionType
version: v1
definition:
  name: NumericBoolExp
  operand:
    scalar:
      type: Numeric
      comparisonOperators:
        - name: _eq
          argumentType: Numeric!
        - name: _gt
          argumentType: Numeric!
        - name: _gte
          argumentType: Numeric!
        - name: _in
          argumentType: "[Numeric!]!"
        - name: _lt
          argumentType: Numeric!
        - name: _lte
          argumentType: Numeric!
        - name: _neq
          argumentType: Numeric!
      dataConnectorOperatorMapping:
        - dataConnectorName: my_pg
          dataConnectorScalarType: numeric
          operatorMapping: {}
  logicalOperators:
    enable: true
  isNull:
    enable: true
  graphql:
    typeName: NumericBoolExp

---
kind: DataConnectorScalarRepresentation
version: v1
definition:
  dataConnectorName: my_pg
  dataConnectorScalarType: numeric
  representation: Numeric
  graphql:
    comparisonExpressionTypeName: NumericComparisonExp

